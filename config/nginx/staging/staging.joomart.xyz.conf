# File: config/nginx/staging/joomart.conf

# This configuration handles HTTP and HTTPS traffic for all services
# (frontend, backend, and API) on the staging environment.

# Redirect HTTP to HTTPS for all subdomains
server {
    listen 80;
    server_name staging.joomart.xyz api.staging.joomart.xyz admin.staging.joomart.xyz;
    # Redirect all HTTP requests to their HTTPS counterparts, preserving the host and URI.
    return 301 https://$host$request_uri;
}

# -------------------------------------------------------------------------------------------------
# Frontend (Vue.js) - Handles traffic for staging.joomart.xyz
# -------------------------------------------------------------------------------------------------
server {
    listen 443 ssl;
    server_name staging.joomart.xyz;

    # Paths to your staging SSL certificates
    ssl_certificate /etc/nginx/certs/staging.joomart.xyz.pem;
    ssl_certificate_key /etc/nginx/certs/staging.joomart.xyz-key.pem;

    # Standard SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Set the root directory where the frontend's static files are located.
    # The `frontend` service's Dockerfile copies them to this location.
    root /usr/share/nginx/html;

    # The 'location /' block is crucial for SPA routing.
    location / {
        # Tries to serve the requested URI. If not a file or directory,
        # it falls back to index.html, allowing the Vue Router to take over.
        try_files $uri $uri/ /index.html;
    }

    # This location block proxies requests to your Laravel API service.
    # Any request starting with '/api/' will be forwarded to the 'api' container on port 9000.
    location /api/ {
        # 'http://api' refers to the name of the container as defined in your docker-compose.yml.
        proxy_pass http://api:9000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# -------------------------------------------------------------------------------------------------
# API (Laravel) - Handles traffic for api.staging.joomart.xyz
# -------------------------------------------------------------------------------------------------
server {
    listen 443 ssl;
    server_name api.staging.joomart.xyz;

    # Paths to your staging SSL certificates
    ssl_certificate /etc/nginx/certs/staging.joomart.xyz.pem;
    ssl_certificate_key /etc/nginx/certs/staging.joomart.xyz-key.pem;

    # Proxy all requests to the 'api' container on its exposed port.
    location / {
        proxy_pass http://api:9000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# -------------------------------------------------------------------------------------------------
# Backend (Next.js) - Handles traffic for admin.staging.joomart.xyz
# -------------------------------------------------------------------------------------------------
server {
    listen 443 ssl;
    server_name admin.staging.joomart.xyz;

    # Paths to your staging SSL certificates
    ssl_certificate /etc/nginx/certs/staging.joomart.xyz.pem;
    ssl_certificate_key /etc/nginx/certs/staging.joomart.xyz-key.pem;

    # Proxy all requests to the 'backend' container on its exposed port.
    location / {
        proxy_pass http://backend:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
