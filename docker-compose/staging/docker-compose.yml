services:
  #Nginx Web Server Service
  webserver:
    image: nginx:stable-alpine
    container_name: joomart-nginx
    restart: unless-stopped
    tty: true
    ports:
      - "80:80" # HTTP port for redirection
      - "443:443" # HTTPS port
    volumes:
      # Mount the Nginx configuration.
      - ../../config/nginx:/etc/nginx/conf.d
      # Mount the SSL certificates.
      - ../../config/nginx/certs:/etc/nginx/certs
      # Mount the Vue app's production build from its build context.
      # The path is now relative to the location of this compose file.
      - ../../frontend/dist:/usr/share/nginx/html
      # You can still mount the api public directory if you need it.
      - ../../api/public:/var/www/html/public
    depends_on:
      - api
      - backend

  #Laravel API Service
  api:
    build:
      args:
        user: lex
        uid: 1000
      context: ../../
      dockerfile: dockerfiles/Dockerfile.api.prod
    image: joomart-api
    container_name: joomart-api
    working_dir: /var/www/html
    volumes:
      - ../../api:/var/www/html
    env_file:
      - ../../api/.env
    environment:
      REDIS_HOST: redis
      SERVICE_NAME: api
      SERVICE_TAGS: dev
    expose:
      - "9000"
    depends_on:
      - db
      - redis
    networks:
      - joomart-network

  #Vue Frontend Service
  frontend:
    build:
      context: ../../frontend
      dockerfile: ../../dockerfiles/Dockerfile.frontend.prod
    image: joomart-frontend
    container_name: joomart-vue-app
    restart: unless-stopped
    tty: true
    working_dir: /app
    volumes:
      - ../../frontend:/app
      - frontend_node_modules:/app/node_modules
    environment:
      VUE_APP_FRONTEND_URL: http://staging.joomart.xyz
      VUE_APP_API_URL: https://staging.api.joomart.local
      NODE_ENV: staging
      CHOKIDAR_USEPOLLING: true
      SERVICE_NAME: frontend
      SERVICE_TAGS: dev
    expose:
      - "3000"
    networks:
      - joomart-network

  #NextJS Backend Service
  backend:
    build:
      context: ../../backend
      dockerfile: ../../dockerfiles/Dockerfile.backend.prod
    image: joomart-backend
    container_name: joomart-next-app
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ../../backend:/app
      - backend_node_modules:/app/node_modules
    environment:
      - NEXT_PUBLIC_API_URL=https://admin.joomart.local
        # Ensure your Next.js dev server expects the protocol as HTTPS if it's strictly enforced by Nginx
      - NODE_ENV=staging
      - PORT=5000
    expose:
      - "5000"
    networks:
      - joomart-network

  #Database Service
  db:
    image: mysql:latest
    container_name: joomart-db
    restart: unless-stopped
    expose:
      - "3306"
    volumes:
      - ../../config/mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro # Read-only mount for MySQL config
      - joomart_mysql_data:/var/lib/mysql
    env_file:
      - ../../config/mysql/.env.db
    environment:
      SERVICE_NAME: mysql
      SERVICE_TAGS: dev
    networks:
      - joomart-network

  #PhpMyAdmin Service
  phpmyadmin:
    image: phpmyadmin
    container_name: joomart-pma
    restart: always
    env_file:
      - ../../config/mysql/.env.db
    environment:
      PMA_ARBITRARY: 1
      PMA_HOST: db
      SERVICE_NAME: phpmyadmin
      SERVICE_TAGS: dev
    ports:
      - 8082:80
    depends_on:
      - db
    networks:
      - joomart-network

  #Redis Cache Service
  redis:
    image: redis:alpine
    container_name: joomart-redis-cache
    ports:
      - "6379:6379"
    expose:
      - "6379"
    networks:
      - joomart-network

volumes:
  joomart_mysql_data:
  frontend_node_modules:
  backend_node_modules:

networks:
  joomart-network:
    driver: bridge
