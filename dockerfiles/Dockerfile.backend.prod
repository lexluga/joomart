# ============================================
# Stage 1: The Build Stage
# ============================================
FROM node:alpine AS builder

# Set the working directory inside the container
WORKDIR /app

# Copy ALL source code into the working directory first
COPY backend/. .

# Install all dependencies (including dev)
RUN npm install

# Build the Next.js application for production.
# This command will now successfully create the '.next' directory.
RUN npm run build

# ============================================
# Stage 2: The Production Stage (Runner)
# ============================================
FROM node:alpine AS runner

# Set the working directory
WORKDIR /app

# The environment variable is a crucial part of the Next.js production setup.
ENV NODE_ENV=staging

# Copy the package files from the build stage to install production dependencies
COPY --from=builder /app/package*.json ./

# Install only production dependencies. Using `npm ci` ensures a clean, predictable install.
RUN npm ci --only=production

# ============================================
# Stage 3: The Final Stage
# This is the final, lean image.
# ============================================
FROM node:alpine AS final

# Set the working directory
WORKDIR /app

# Copy the build output and necessary files from previous stages
COPY --from=builder /app/.next ./.next
COPY --from=runner /app/node_modules ./node_modules
COPY --from=builder /app/public ./public
COPY --from=builder /app/package.json ./package.json

# Expose port 5000 internally as per your Caddy configuration
EXPOSE 5000

# The command to start the Next.js application in production mode
CMD ["npm", "run", "start"]
